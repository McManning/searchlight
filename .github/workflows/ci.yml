name: Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: ['7.4', '8.0', '8.1']
        es-version: ['7.10.2']

    name: PHP ${{ matrix.php-version }} - ElasticSearch ${{ matrix.es-version }}

    services:
      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:${{ matrix.es-version }}
        ports:
        - 9200/tcp
        options: >-
          -e="discovery.type=single-node"
          --health-cmd="curl http://localhost:9200/_cluster/health"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
    - name: Checkout
    - uses: actions/checkout@v3

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        coverage: xdebug

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Seed IMDb test index
      env:
        ELASTIC_SEARCH_URL: http://localhost:${{ job.services.elasticsearch.ports[9200] }}
      run: |
        curl -XPUT "$ELASTIC_SEARCH_URL/imdb_movies"
        curl -H "Content-Type: application/json" -XPUT "$ELASTIC_SEARCH_URL/imdb_movies/_mapping?pretty" --data-binary "@tests/Data/mapping.json"
        curl -H "Content-Type: application/json" -XPOST "$ELASTIC_SEARCH_URL/imdb_movies/_bulk?refresh=wait_for" --data-binary "@tests/Data/imdb_movies.json"

    - name: Run test suite
      env:
        SEARCHLIGHT_DEFAULT_HOST: http://localhost:${{ job.services.elasticsearch.ports[9200] }}
      run: composer run-script ci

  release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [test]
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Semantic Release
      uses: cycjimmy/semantic-release-action@v3
      with:
        semantic_version: 18
        branches: |
          [
          'main'
          ]
        extra_plugins: |
          @semantic-release/changelog
          @semantic-release/git
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
